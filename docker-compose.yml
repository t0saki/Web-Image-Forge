version: '3.8'

services:
  db:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-image_optimizer}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    image: tosakiup/web-image-forge:latest
    command: gunicorn --workers=${APP_WORKERS:-2} --bind 0.0.0.0:5000 app:app
    volumes:
      - ./images:/app/images
    ports:
      - "${APP_PORT:-5000}:5000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:${DB_PORT:-5432}/${POSTGRES_DB:-image_optimizer}
      - STORAGE_PATH=/app/images
      - WEBP_QUALITY=${WEBP_QUALITY:-80}
      - WEBP_METHOD=${WEBP_METHOD:-4}
      - AVIF_QUALITY=${AVIF_QUALITY:-65}
      - AVIF_SPEED=${AVIF_SPEED:-6}
      - MAX_PIXELS=${MAX_PIXELS:-8294400}
      - DOMAIN_WHITELIST=${DOMAIN_WHITELIST:-}
      - API_KEY=${API_KEY:-}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  worker:
    image: tosakiup/web-image-forge:latest
    command: python3 worker.py
    volumes:
      - ./images:/app/images
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:${DB_PORT:-5432}/${POSTGRES_DB:-image_optimizer}
      - STORAGE_PATH=/app/images
      - WEBP_QUALITY=${WEBP_QUALITY:-80}
      - WEBP_METHOD=${WEBP_METHOD:-4}
      - AVIF_QUALITY=${AVIF_QUALITY:-65}
      - AVIF_SPEED=${AVIF_SPEED:-6}
      - MAX_PIXELS=${MAX_PIXELS:-8294400}
      - WORKER_THREADS=${WORKER_THREADS:-2}
      - POLL_INTERVAL=${POLL_INTERVAL:-1}
      - DOMAIN_WHITELIST=${DOMAIN_WHITELIST:-}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      replicas: ${WORKER_REPLICAS:-1}

volumes:
  postgres_data: 